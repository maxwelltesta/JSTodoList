{"ast":null,"code":"var _jsxFileName = \"/Users/maxwelltesta/Desktop/todo_hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nimport { runInThisContext } from 'vm';\nimport { updateExpression } from '@babel/types';\nimport { POINT_CONVERSION_UNCOMPRESSED } from 'constants';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null,\n      currentItem: null\n    };\n\n    this.goHome = () => {\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n      this.setState({\n        currentItem: null\n      });\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n      this.setState({\n        currentItem: null\n      });\n      console.log(\"currentList: \" + this.state.currentList);\n      console.log(\"currentScreen: \" + this.state.currentScreen);\n    };\n\n    this.goItemScreen = itemToLoad => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n      this.setState({\n        currentItem: itemToLoad\n      });\n    };\n\n    this.processEditItem = () => {\n      let newList = this.state.currentList;\n      newList.items[this.state.currentItem.key] = this.state.currentItem;\n      let newLists = this.state.todoLists;\n      newLists[newList.key] = newList;\n      this.setState({\n        currentList: newList,\n        todoLists: newLists\n      });\n      this.loadList(this.state.currentList);\n    };\n\n    this.processSubmitNewItem = () => {\n      if (this.state.currentItem.description === \"\" || this.state.currentItem.description === null) {\n        this.state.currentItem.description = \"Default\";\n      }\n\n      if (this.state.currentItem.assigned_to === \"\" || this.state.currentItem.assigned_to === null) {\n        this.state.currentItem.assigned_to = \"Default\";\n      }\n\n      if (this.state.currentItem.due_date === \"\" || this.state.currentItem.due_date === null) {\n        this.state.currentItem.due_date = \"2000-01-01\";\n      }\n\n      let newList = this.state.currentList;\n      newList.items.push(this.state.currentItem);\n      let newLists = this.state.todoLists;\n      newLists[this.state.currentList.key] = this.state.currentList;\n      this.setState({\n        currentList: newList,\n        todoLists: newLists\n      });\n      this.loadList(this.state.currentList);\n    };\n  }\n\n  sortByTask() {\n    let newList = this.state.currentList;\n    newList.items.sort((a, b) => a.description > b.description).map((item, i) => item.key = {\n      i\n    });\n    let newLists = this.state.todoLists;\n    newLists[newList.key] = newList;\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    });\n    this.loadList(this.state.currentList);\n  }\n\n  sortByDueDate() {}\n\n  sortByStatus() {}\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          goHome: this.goHome.bind(this),\n          todoList: this.state.currentList,\n          loadList: this.loadList.bind(this),\n          sortByTask: this.sortByTask.bind(this),\n          sortByDueDate: this.sortByDueDate.bind(this),\n          sortByStatus: this.sortByStatus.bind(this),\n          goItemScreen: this.goItemScreen.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          currentScreen: this.state.currentScreen,\n          loadList: this.loadList.bind(this),\n          todoList: this.state.currentList,\n          todoItem: this.state.currentItem,\n          currentItem: this.state.currentItem,\n          processEditItem: this.processEditItem.bind(this),\n          processSubmitNewItem: this.processSubmitNewItem.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maxwelltesta/Desktop/todo_hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","runInThisContext","updateExpression","POINT_CONVERSION_UNCOMPRESSED","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","state","currentScreen","todoLists","currentList","currentItem","goHome","setState","loadList","todoListToLoad","console","log","goItemScreen","itemToLoad","processEditItem","newList","items","key","newLists","processSubmitNewItem","description","assigned_to","due_date","push","sortByTask","sort","a","b","map","item","i","sortByDueDate","sortByStatus","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\nimport { runInThisContext } from 'vm';\nimport { updateExpression } from '@babel/types';\nimport { POINT_CONVERSION_UNCOMPRESSED } from 'constants';\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null,\n    currentItem: null\n  }\n\n  goHome = () => {\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n    this.setState({currentList: null});\n    this.setState({currentItem: null});\n  }\n\n  loadList = (todoListToLoad) => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentList: todoListToLoad});\n    this.setState({currentItem: null});\n    console.log(\"currentList: \" + this.state.currentList);\n    console.log(\"currentScreen: \" + this.state.currentScreen);\n  }\n\n  goItemScreen = (itemToLoad) => {\n    this.setState({currentScreen: AppScreen.ITEM_SCREEN});\n    this.setState({currentItem: itemToLoad});\n  }\n\n  processEditItem = () => {\n    let newList = this.state.currentList;\n    newList.items[this.state.currentItem.key] = this.state.currentItem;\n    let newLists = this.state.todoLists;\n    newLists[newList.key] = newList;\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    })\n    this.loadList(this.state.currentList);\n  }\n  processSubmitNewItem = () => {\n    if (this.state.currentItem.description === \"\" || this.state.currentItem.description === null) {\n      this.state.currentItem.description = \"Default\";\n    }\n    if (this.state.currentItem.assigned_to === \"\" || this.state.currentItem.assigned_to === null) {\n      this.state.currentItem.assigned_to = \"Default\";\n    }\n    if (this.state.currentItem.due_date === \"\" || this.state.currentItem.due_date === null) {\n      this.state.currentItem.due_date = \"2000-01-01\";\n    }\n    let newList = this.state.currentList;\n    newList.items.push(this.state.currentItem);\n    let newLists = this.state.todoLists;\n    newLists[this.state.currentList.key] = this.state.currentList;\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    })\n    this.loadList(this.state.currentList);\n  }\n  sortByTask() {\n    let newList = this.state.currentList;\n    newList.items.sort((a, b) => a.description > b.description).map((item, i) => item.key={i})\n    let newLists = this.state.todoLists;\n    newLists[newList.key] = newList;\n\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    })\n    this.loadList(this.state.currentList);\n  }\n  sortByDueDate() {\n\n  }\n  sortByStatus() {\n      \n  }\n  render() {\n    switch(this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen \n        loadList={this.loadList.bind(this)}\n        todoLists={this.state.todoLists} />;\n      case AppScreen.LIST_SCREEN:            \n        return <ListScreen\n        goHome={this.goHome.bind(this)}\n        todoList={this.state.currentList}\n        loadList={this.loadList.bind(this)}\n        sortByTask={this.sortByTask.bind(this)}\n        sortByDueDate={this.sortByDueDate.bind(this)}\n        sortByStatus={this.sortByStatus.bind(this)}\n        goItemScreen={this.goItemScreen.bind(this)} />;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen\n        currentScreen={this.state.currentScreen}\n        loadList={this.loadList.bind(this)}\n        todoList={this.state.currentList} \n        todoItem={this.state.currentItem}\n        currentItem={this.state.currentItem}\n        processEditItem={this.processEditItem.bind(this)}\n        processSubmitNewItem={this.processSubmitNewItem.bind(this)}/>;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}