{"ast":null,"code":"var _jsxFileName = \"/Users/maxwelltesta/Desktop/todo_hw2/src/components/item_screen/ItemScreen.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class ItemScreen extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      id: \"todo_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      id: \"item_heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Item\"), React.createElement(\"div\", {\n      id: \"item_form_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"item_description_prompt\",\n      className: \"item_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Description: \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"item_description_textfield\",\n      className: \"item_input\",\n      defaultValue: this.props.todoItem.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"item_assigned_to_prompt\",\n      className: \"item_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Assigned To: \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"item_assigned_to_textfield\",\n      className: \"item_input\",\n      defaultValue: this.props.todoItem.assigned_to,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"item_due_date_prompt\",\n      className: \"item_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Due Date: \"), React.createElement(\"input\", {\n      type: \"date\",\n      id: \"item_due_date_picker\",\n      className: \"item_input\",\n      defaultValue: this.props.todoItem.due_date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"item_completed_prompt\",\n      className: \"item_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Completed: \"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"item_completed_checkbox\",\n      className: \"item_input\",\n      defaultChecked: this.props.todoItem.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"item_form_button_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      id: \"item_form_submit_button\",\n      onClick: this.props.todoItem.key < this.props.todoList.items.length ? this.processEditItem.bind(this) : this.processSubmitNewItem.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Cancel\",\n      id: \"item_form_cancel_button\",\n      onClick: this.props.loadList.bind(this, this.props.todoList),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))));\n  }\n\n}\nItemScreen.propTypes = {\n  currentScreen: PropTypes.string.isRequired,\n  todoItem: PropTypes.object.isRequired\n};\nexport default ItemScreen;","map":{"version":3,"sources":["/Users/maxwelltesta/Desktop/todo_hw2/src/components/item_screen/ItemScreen.js"],"names":["React","Component","PropTypes","ItemScreen","render","props","todoItem","description","assigned_to","due_date","completed","key","todoList","items","length","processEditItem","bind","processSubmitNewItem","loadList","propTypes","currentScreen","string","isRequired","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class ItemScreen extends Component {\n    render() {\n        return (\n            <div id=\"todo_item\">\n                <h3 id=\"item_heading\">Item</h3>\n                <div id=\"item_form_container\">\n                    <span id=\"item_description_prompt\" className=\"item_prompt\">Description: </span>\n                    <input type=\"text\" id=\"item_description_textfield\" className=\"item_input\" defaultValue={this.props.todoItem.description}/>\n        \n                    <span id=\"item_assigned_to_prompt\" className=\"item_prompt\">Assigned To: </span>\n                    <input type=\"text\" id=\"item_assigned_to_textfield\" className=\"item_input\" defaultValue={this.props.todoItem.assigned_to} />\n\n                    <span id=\"item_due_date_prompt\" className=\"item_prompt\">Due Date: </span>\n                    <input type=\"date\" id=\"item_due_date_picker\" className=\"item_input\" defaultValue={this.props.todoItem.due_date}/>\n\n                    <span id=\"item_completed_prompt\" className=\"item_prompt\">Completed: </span>\n                    <input type=\"checkbox\" id=\"item_completed_checkbox\" className=\"item_input\" defaultChecked={this.props.todoItem.completed}/>\n            \n                    <div id=\"item_form_button_container\">\n                        <input type=\"button\" value=\"Submit\" id=\"item_form_submit_button\"\n                        onClick={(this.props.todoItem.key < this.props.todoList.items.length) ? this.processEditItem.bind(this) : this.processSubmitNewItem.bind(this)}/>\n                        <input type=\"button\" value=\"Cancel\" id=\"item_form_cancel_button\" onClick={this.props.loadList.bind(this, this.props.todoList)}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nItemScreen.propTypes = {\n    currentScreen: PropTypes.string.isRequired,\n    todoItem: PropTypes.object.isRequired\n}\n\nexport default ItemScreen\n"]},"metadata":{},"sourceType":"module"}