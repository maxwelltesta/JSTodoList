{"ast":null,"code":"var _jsxFileName = \"/Users/maxwelltesta/Desktop/todo_hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null,\n      currentItem: null\n    };\n\n    this.goHome = () => {\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n      this.setState({\n        currentItem: null\n      });\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n      this.setState({\n        currentItem: null\n      });\n    };\n\n    this.goItemScreen = itemToLoad => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n      this.setState({\n        currentItem: itemToLoad\n      });\n    };\n\n    this.processEditItem = () => {\n      let newList = this.state.currentList;\n      newList.items[this.state.currentItem.key] = this.state.currentItem;\n      let newLists = this.state.todoLists;\n      newLists[newList.key] = newList;\n      this.setState({\n        currentList: newList,\n        todoLists: newLists\n      });\n      this.loadList(this.state.currentList);\n    };\n\n    this.processSubmitNewItem = () => {\n      if (this.state.currentItem.description === \"\" || this.state.currentItem.description === null) {\n        this.state.currentItem.description = \"Default\";\n      }\n\n      if (this.state.currentItem.assigned_to === \"\" || this.state.currentItem.assigned_to === null) {\n        this.state.currentItem.assigned_to = \"Default\";\n      }\n\n      if (this.state.currentItem.due_date === \"\" || this.state.currentItem.due_date === null) {\n        this.state.currentItem.due_date = \"2000-01-01\";\n      }\n\n      let newList = this.state.currentList;\n      newList.items.push(this.state.currentItem);\n      let newLists = this.state.todoLists;\n      newLists[this.state.currentList.key] = this.state.currentList;\n      this.setState({\n        currentList: newList,\n        todoLists: newLists\n      });\n      this.loadList(this.state.currentList);\n    };\n  }\n\n  sortByTask(direction) {\n    let newList = this.state.currentList;\n\n    if (direction === \"TASK_INCREASING\") {\n      newList.items.sort((a, b) => a.description > b.description).map((item, i) => item.key = i);\n    } else {\n      newList.items.sort((a, b) => a.description < b.description).map((item, i) => item.key = i);\n    }\n\n    let newLists = this.state.todoLists;\n    newLists[newList.key] = newList;\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    });\n    this.loadList(this.state.currentList);\n  }\n\n  sortByDueDate(direction) {\n    let newList = this.state.currentList;\n\n    if (direction === \"DUE_DATE_INCREASING\") {\n      newList.items.sort((a, b) => a.due_date > b.due_date).map((item, i) => item.key = i);\n    } else {\n      newList.items.sort((a, b) => a.due_date < b.due_date).map((item, i) => item.key = i);\n    }\n\n    let newLists = this.state.todoLists;\n    newLists[newList.key] = newList;\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    });\n    this.loadList(this.state.currentList);\n  }\n\n  sortByStatus(direction) {\n    let newList = this.state.currentList;\n\n    if (direction === \"STATUS_INCREASING\") {\n      newList.items.sort((a, b) => a.completed > b.completed).map((item, i) => item.key = i);\n    } else {\n      newList.items.sort((a, b) => a.completed < b.completed).map((item, i) => item.key = i);\n    }\n\n    let newLists = this.state.todoLists;\n    newLists[newList.key] = newList;\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    });\n    this.loadList(this.state.currentList);\n  }\n\n  addNewList(item) {\n    let newList = item;\n    let newLists = this.state.todoLists;\n    newLists.push(newList);\n    this.setState({\n      todoLists: newLists\n    });\n    this.loadList(newList);\n  }\n\n  deleteList() {\n    let newLists = this.state.todoLists;\n    newLists.splice(this.state.currentList.key, 1);\n    newLists.map((item, i) => item.key = i);\n    this.setState({\n      currentList: null,\n      todoLists: newLists\n    });\n    this.goHome();\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          addNewList: this.addNewList.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          goHome: this.goHome.bind(this),\n          todoList: this.state.currentList,\n          loadList: this.loadList.bind(this),\n          sortByTask: this.sortByTask.bind(this),\n          sortByDueDate: this.sortByDueDate.bind(this),\n          sortByStatus: this.sortByStatus.bind(this),\n          goItemScreen: this.goItemScreen.bind(this),\n          deleteList: this.deleteList.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          currentScreen: this.state.currentScreen,\n          loadList: this.loadList.bind(this),\n          todoList: this.state.currentList,\n          todoItem: this.state.currentItem,\n          currentItem: this.state.currentItem,\n          processEditItem: this.processEditItem.bind(this),\n          processSubmitNewItem: this.processSubmitNewItem.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maxwelltesta/Desktop/todo_hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","state","currentScreen","todoLists","currentList","currentItem","goHome","setState","loadList","todoListToLoad","goItemScreen","itemToLoad","processEditItem","newList","items","key","newLists","processSubmitNewItem","description","assigned_to","due_date","push","sortByTask","direction","sort","a","b","map","item","i","sortByDueDate","sortByStatus","completed","addNewList","deleteList","splice","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null,\n    currentItem: null\n  }\n\n  goHome = () => {\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n    this.setState({currentList: null});\n    this.setState({currentItem: null});\n  }\n\n  loadList = (todoListToLoad) => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentList: todoListToLoad});\n    this.setState({currentItem: null});\n  }\n\n  goItemScreen = (itemToLoad) => {\n    this.setState({currentScreen: AppScreen.ITEM_SCREEN});\n    this.setState({currentItem: itemToLoad});\n  }\n\n  processEditItem = () => {\n    let newList = this.state.currentList;\n    newList.items[this.state.currentItem.key] = this.state.currentItem;\n    let newLists = this.state.todoLists;\n    newLists[newList.key] = newList;\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    })\n    this.loadList(this.state.currentList);\n  }\n  processSubmitNewItem = () => {\n    if (this.state.currentItem.description === \"\" || this.state.currentItem.description === null) {\n      this.state.currentItem.description = \"Default\";\n    }\n    if (this.state.currentItem.assigned_to === \"\" || this.state.currentItem.assigned_to === null) {\n      this.state.currentItem.assigned_to = \"Default\";\n    }\n    if (this.state.currentItem.due_date === \"\" || this.state.currentItem.due_date === null) {\n      this.state.currentItem.due_date = \"2000-01-01\";\n    }\n    let newList = this.state.currentList;\n    newList.items.push(this.state.currentItem);\n    let newLists = this.state.todoLists;\n    newLists[this.state.currentList.key] = this.state.currentList;\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    })\n    this.loadList(this.state.currentList);\n  }\n  sortByTask(direction) {\n    let newList = this.state.currentList;\n    if (direction === \"TASK_INCREASING\") {\n      newList.items.sort((a, b) => a.description > b.description).map((item, i) => item.key=i);\n    }\n    else {\n      newList.items.sort((a, b) => a.description < b.description).map((item, i) => item.key=i);\n    }\n    let newLists = this.state.todoLists;\n    newLists[newList.key] = newList;\n\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    })\n    this.loadList(this.state.currentList);\n  }\n  sortByDueDate(direction) {\n    let newList = this.state.currentList;\n    if (direction === \"DUE_DATE_INCREASING\") {\n      newList.items.sort((a, b) => a.due_date > b.due_date).map((item, i) => item.key=i);\n    }\n    else {\n      newList.items.sort((a, b) => a.due_date < b.due_date).map((item, i) => item.key=i);\n    }\n    let newLists = this.state.todoLists;\n    newLists[newList.key] = newList;\n\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    })\n    this.loadList(this.state.currentList);\n  }\n  sortByStatus(direction) {\n    let newList = this.state.currentList;\n    if (direction === \"STATUS_INCREASING\") {\n      newList.items.sort((a, b) => a.completed > b.completed).map((item, i) => item.key=i);\n    }\n    else {\n      newList.items.sort((a, b) => a.completed < b.completed).map((item, i) => item.key=i);\n    }\n    let newLists = this.state.todoLists;\n    newLists[newList.key] = newList;\n\n    this.setState({\n      currentList: newList,\n      todoLists: newLists\n    })\n    this.loadList(this.state.currentList);\n  }\n  addNewList(item) {\n    let newList = item;\n    let newLists = this.state.todoLists;\n    newLists.push(newList);\n    this.setState({\n      todoLists: newLists\n    })\n    this.loadList(newList);\n  }\n  deleteList() {\n    let newLists = this.state.todoLists;\n    newLists.splice(this.state.currentList.key, 1);\n    newLists.map((item, i) => item.key=i);\n    this.setState({\n      currentList: null,\n      todoLists: newLists\n    })\n    this.goHome();\n  }\n  render() {\n    switch(this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen \n        loadList={this.loadList.bind(this)}\n        todoLists={this.state.todoLists} \n        addNewList={this.addNewList.bind(this)}/>;\n      case AppScreen.LIST_SCREEN:            \n        return <ListScreen\n        goHome={this.goHome.bind(this)}\n        todoList={this.state.currentList}\n        loadList={this.loadList.bind(this)}\n        sortByTask={this.sortByTask.bind(this)}\n        sortByDueDate={this.sortByDueDate.bind(this)}\n        sortByStatus={this.sortByStatus.bind(this)}\n        goItemScreen={this.goItemScreen.bind(this)} \n        deleteList={this.deleteList.bind(this)}/>;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen\n        currentScreen={this.state.currentScreen}\n        loadList={this.loadList.bind(this)}\n        todoList={this.state.currentList} \n        todoItem={this.state.currentItem}\n        currentItem={this.state.currentItem}\n        processEditItem={this.processEditItem.bind(this)}\n        processSubmitNewItem={this.processSubmitNewItem.bind(this)}/>;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}